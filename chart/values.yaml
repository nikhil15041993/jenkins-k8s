# Declare variables to be passed into your templates.

replicaCount: 1
image:
  repository: 337909736859.dkr.ecr.ap-south-1.amazonaws.com/on-preme-test
  pullPolicy: IfNotPresent
  tag: "2"

imagePullSecrets:
 - name: smac-ecr-image-pull-secret
nameOverride: ""
fullnameOverride: ""



env:
  - name: DB_PASSWORD
    valueFrom:
      secretKeyRef:
        name: my-db-secret
        key: db_password
  - name: RAILS_ENV
    value: "development"
#  - name: API_BASE_URL
#   value: "https://api-dev.synergymarinetest.com/"


serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


service:
  type: ClusterIP
  port: 80
  app: flask-postgres-app2
  name: flask-postgres-service2
  tport: 5000

deployment:
  name: flask-postgres-app2
  app:  flask-postgres-app2



ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/group.name: "smac-group"
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "letsencrypt-prod"  # Use "letsencrypt-staging" for testing
  hosts:
    - host: smac.thinkpalm.info
      paths:
        - path: /flask2
          pathType: Prefix
          service:
            name: flask-postgres-service2
            port:
              number: 80

  tls:  # Add the tls section here
    - hosts:
        - smac.thinkpalm.info  # Replace with your actual domain
      secretName: myapp-tls  # Secret where SSL certificate will be stored

resources:
  limits:
    cpu: 256m
    memory: 512Mi
  requests:
    cpu: 256m
    memory: 512Mi

livenessProbe:
  httpGet:
    path: /
    port: 5000
readinessProbe:
  httpGet:
    path: /
    port: 5000

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
